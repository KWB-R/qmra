# Generated by Django 3.1.7 on 2021-03-09 21:00

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Exposure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.CharField(max_length=250)),
                ('events_per_year', models.IntegerField(default=10)),
                ('volume_per_event', models.DecimalField(decimal_places=4, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='PathogenGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pathogen_group', models.CharField(max_length=64)),
                ('description', models.TextField(max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='QA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=120)),
                ('answer', models.TextField(max_length=20000)),
            ],
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('link', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='SourceWater',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('water_source_name', models.CharField(max_length=64)),
                ('water_source_description', models.CharField(max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('content', models.TextField(max_length=20000)),
            ],
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('group', models.CharField(default='wastewater', max_length=64)),
                ('category', models.CharField(choices=[('wastewater', 'wastewater'), ('drinking_water', 'drinking water'), ('surface_water', 'surface water')], default='wastewater', max_length=64)),
                ('description', models.TextField(max_length=1000)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RiskAssessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=64)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('exposure', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.CASCADE, to='qmratool.exposure')),
                ('source', models.ForeignKey(blank=True, default=1, on_delete=django.db.models.deletion.PROTECT, to='qmratool.sourcewater')),
                ('treatment', models.ManyToManyField(blank=True, default=1, related_name='treatments', to='qmratool.Treatment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='assessments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Pathogen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pathogen', models.CharField(default='Rota', max_length=64)),
                ('description', models.TextField(max_length=2000)),
                ('pathogen_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pathogens', to='qmratool.pathogengroup')),
            ],
        ),
        migrations.CreateModel(
            name='LogRemoval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min', models.DecimalField(decimal_places=1, max_digits=4)),
                ('max', models.DecimalField(decimal_places=1, max_digits=4)),
                ('mean', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('alpha', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('beta', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('distribution', models.CharField(default='uniform', max_length=64)),
                ('pathogen_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logremoval', to='qmratool.pathogengroup')),
                ('reference', models.ForeignKey(default=51, on_delete=django.db.models.deletion.CASCADE, related_name='logremoval', to='qmratool.reference')),
                ('treatment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logremoval', to='qmratool.treatment')),
            ],
        ),
        migrations.CreateModel(
            name='Inflow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min', models.DecimalField(decimal_places=8, default=-100, max_digits=20)),
                ('max', models.DecimalField(decimal_places=8, default=-100, max_digits=20)),
                ('mean', models.DecimalField(decimal_places=8, default=-100, max_digits=20, null=True)),
                ('alpha', models.DecimalField(decimal_places=8, default=-100, max_digits=20, null=True)),
                ('beta', models.DecimalField(decimal_places=8, default=-100, max_digits=20, null=True)),
                ('distribution', models.CharField(default='lognormal', max_length=64)),
                ('pathogen_in_ref', models.CharField(default='unknown', max_length=200)),
                ('notes', models.CharField(default='unknown', max_length=200)),
                ('pathogen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qmratool.pathogen')),
                ('reference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qmratool.reference')),
                ('water_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qmratool.sourcewater')),
            ],
        ),
        migrations.CreateModel(
            name='Health',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('infection_to_illness', models.DecimalField(decimal_places=2, max_digits=3)),
                ('dalys_per_case', models.DecimalField(decimal_places=6, max_digits=6)),
                ('pathogen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qmratool.pathogen')),
                ('reference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qmratool.reference')),
            ],
        ),
        migrations.CreateModel(
            name='Guideline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.CharField(max_length=250)),
                ('reference', models.ForeignKey(default=40, on_delete=django.db.models.deletion.CASCADE, to='qmratool.reference')),
            ],
        ),
        migrations.AddField(
            model_name='exposure',
            name='reference',
            field=models.ForeignKey(default=51, on_delete=django.db.models.deletion.CASCADE, to='qmratool.reference'),
        ),
        migrations.AddField(
            model_name='exposure',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scenarios', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DoseResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bestfitmodel', models.CharField(default='unknown', max_length=250)),
                ('k', models.DecimalField(decimal_places=10, default=0, max_digits=20)),
                ('alpha', models.DecimalField(decimal_places=10, default=0, max_digits=20)),
                ('n50', models.DecimalField(decimal_places=10, default=0, max_digits=20)),
                ('hosttype', models.CharField(default='unknown', max_length=250)),
                ('doseunits', models.CharField(default='unknown', max_length=250)),
                ('route', models.CharField(default='unknown', max_length=250)),
                ('response', models.CharField(default='unknown', max_length=250)),
                ('pathogen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qmratool.pathogen')),
                ('reference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qmratool.reference')),
            ],
        ),
        migrations.CreateModel(
            name='Comparison',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('risk_assessment', models.ManyToManyField(blank=True, to='qmratool.RiskAssessment')),
            ],
        ),
    ]
